{"version":3,"file":"app/javascripts/build/collections.js","sources":["app/javascripts/build/collections.js","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4"],"names":[],"mappings":"AAAA;ACAI,CAAJ,EAAI,sBDAJ,SAAM,oBAAmB,CAEX,MAAM,CAAE,CAAA,OAAO,CAAE;AEF/B,CFGI,gBEHW,UAAU,uDFGf,MAAM,CAAE,QAAO,EEF4B,CFE1B;AACvB,CAAA,KAAI,MAAM,EAAI,WAAU,CAAC;AACzB,CAAA,KAAI,OAAO,EAAG,CAAA,OAAO,OAAO,CAAC;CCLQ,ADMtC,CCNsC;AEArC,CAAJ,EAAI,2CAAqC,CAAA;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;CJQ3B,cAAa,CAAb,UAAc,CAAE;CACd,SAAO;AACL,CAAA,SAAI,GAAE,SAAU,EAAA,CAAA,IAAI,OAAO,EAAA,aAAY,CAAA;AACvC,CAAA,WAAM,CAAE;AACN,CAAA,YAAK,CAAE,IAAG;AACV,CAAA,aAAM,CAAE,EAAC;CAAA,MACV;CAAA,IACF,CAAA;GACF;CAED,MAAK,CAAL,UAAM,OAAO,CAAE;AACT,CAAJ,MAAI,CAAA,OAAO,EAAG,CAAA,OAAO,QAAQ,GAAI,CAAA,IAAI,cAAc,EAAE;AACjD,CAAA,aAAM,EAAI,CAAA,OAAO,OAAO;AACxB,CAAA,cAAO,EAAG,CAAA,OAAO,QAAQ,CAAC;AAE9B,CAAA,KAAE,IAAI,CAAC,OAAO,KAAK,CAAE;AAAC,CAAA,YAAO,CAAE,CAAA,MAAM,MAAM;AAAE,CAAA,aAAQ,CAAE,CAAA,MAAM,OAAO;CAAA,IAAE,CACpE,CAAA,CAAC,KAAK,CAAC,SAAS,IAAI,CAAE;AACpB,CAAA,SAAI,IAAI,CAAC,IAAI,CAAE,CAAA,CAAC,OAAO,CAAC,CAAC,MAAM,CAAE,KAAI,CAAC,CAAE,QAAO,CAAC,CAAC,CAAC;CAClD,SAAI,IAAI,OAAO,IAAK,EAAC,CAAE;AACrB,CAAA,WAAI,MAAM,CAAC,IAAI,OAAO,CAAE,QAAO,CAAC,CAAC;AACjC,CAAA,cAAO,EAAE,CAAC;OACX,KAAM;AACL,CAAA,aAAM,OAAO,GAAI,CAAA,IAAI,OAAO,CAAC;AAC7B,CAAA,WAAI,MAAM,CAAC;AACT,CAAA,gBAAO,CAAE,QAAO;AAChB,CAAA,gBAAO,CAAE,QAAO;CAAA,QACjB,CAAC,CAAC;OACJ;CAAA,IACF,CAAE,KAAI,CAAC,CACT,CAAC;GACH;CAAA,KAtC+B,CAAA,QAAQ,WAAW,CICI;CJuCxD","sourcesContent":["class FavoritesCollection extends Backbone.Collection {\n  \n  constructor(models, options) {\n    super(models, options);\n    this.model  = TrackModel;\n    this.userId = options.userId;\n  }\n\n  defaultParams() {\n    return {\n      path: `/users/${this.userId}/favorites`,\n      params: { \n        limit: 200,\n        offset: 0 \n      }\n    }\n  }\n\n  fetch(options) {\n    var request = options.request || this.defaultParams(),\n        params  = request.params,\n        success = options.success;\n\n    SC.get(request.path, {'limit': params.limit, 'offset': params.offset },\n      _.bind(function(data) {\n        this.add(data, _.extend({silent: true}, options));\n        if (data.length === 0) {\n          this.reset(this.models, options);\n          success();\n        } else {\n          params.offset += data.length;\n          this.fetch({\n            request: request, \n            success: success\n          });\n        }\n      }, this)\n    );\n  }\n\n}","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)"]}